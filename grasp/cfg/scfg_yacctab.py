
# /Users/waziz/workspace/github/grasp/grasp/cfg/scfg_yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '5983BAE17D4182F67DBF644D60B4EED9'
    
_lr_action_items = {'FVALUE':([13,14,15,17,18,19,20,21,22,],[14,-13,-8,14,-9,22,-10,-11,-12,]),'EQUALS':([16,],[19,]),'NONTERMINAL':([0,3,4,5,7,8,9,10,12,],[1,4,-5,8,-4,-7,-6,4,8,]),'$end':([2,14,15,17,18,20,21,22,],[0,-13,-8,-1,-9,-10,-11,-12,]),'FNAME':([13,14,15,17,18,20,21,22,],[16,-13,-8,16,-9,-10,-11,-12,]),'BAR':([1,4,5,6,7,8,9,11,12,],[3,-5,-2,10,-4,-7,-6,13,-3,]),'TERMINAL':([3,4,5,7,8,9,10,12,],[7,-5,9,-4,-7,-6,7,9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'rule':([0,],[2,]),'trhs':([10,],[11,]),'fpair':([13,17,],[15,20,]),'rhs':([3,10,],[5,12,]),'fpairs':([13,],[17,]),'srhs':([3,],[6,]),'fvalue':([13,17,],[18,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> rule","S'",1,None,None,None),
  ('rule -> NONTERMINAL BAR srhs BAR trhs BAR fpairs','rule',7,'p_rule_and_weights','ply_scfg.py',32),
  ('srhs -> rhs','srhs',1,'p_srhs','ply_scfg.py',47),
  ('trhs -> rhs','trhs',1,'p_trhs','ply_scfg.py',51),
  ('rhs -> TERMINAL','rhs',1,'p_rhs','ply_scfg.py',55),
  ('rhs -> NONTERMINAL','rhs',1,'p_rhs','ply_scfg.py',56),
  ('rhs -> rhs TERMINAL','rhs',2,'p_rhs_recursion','ply_scfg.py',60),
  ('rhs -> rhs NONTERMINAL','rhs',2,'p_rhs_recursion','ply_scfg.py',61),
  ('fpairs -> fpair','fpairs',1,'p_fpairs','ply_scfg.py',65),
  ('fpairs -> fvalue','fpairs',1,'p_fpairs','ply_scfg.py',66),
  ('fpairs -> fpairs fpair','fpairs',2,'p_fpairs_recursion','ply_scfg.py',70),
  ('fpairs -> fpairs fvalue','fpairs',2,'p_fpairs_recursion','ply_scfg.py',71),
  ('fpair -> FNAME EQUALS FVALUE','fpair',3,'p_fpair','ply_scfg.py',75),
  ('fvalue -> FVALUE','fvalue',1,'p_fvalue','ply_scfg.py',79),
]
